import { load } from "cheerio";
import { url } from "./getExploite";
import { prittyfy } from "../utils/parse";
import { typeVulnerability } from "../types/getExploiteDetails";
import { getCvss } from "../utils/utility";

export async function getExploiteDetails(id: string) {
  const response = await fetch(url + id);
  const data = await response.text();
  let $ = load(data);
  const Vulnerability: typeVulnerability = {
    Id: null,
    Description: null,
    Reference: {
      title: null,
      details: null,
      hyperLink: null,
      source: null,
    },
    WeaknessEnumeration: {
      CWE_ID: null,
      LINK: null,
      CWE_Name: null,
      SOURCE: null,
    },
    Matrics: {
      Note: null,
      cvss4: null,
      cvss3: null,
      cvss2: null,
    },
  };
  $("#vulnDetailPanel").each((i, el) => {
    Vulnerability.Id = prittyfy($(el).find("h2").text()) || null;
    Vulnerability.Description = prittyfy($(el).find("p").text()) || null;
  });
  Vulnerability.Reference = {
    title: prittyfy($("#vulnHyperlinksPanel h3").text()) || null,
    details: prittyfy($("#vulnHyperlinksPanel p").text()) || null,
    hyperLink: $("#vulnHyperlinksPanel tbody a").attr("href") || null,
    source: prittyfy($("#vulnHyperlinksPanel tbody span span").text()) || null,
  };

  Vulnerability.WeaknessEnumeration = {
    CWE_ID:
      prittyfy($('[data-testid="vuln-CWEs-table"] tbody a').text().trim()) ||
      null,
    LINK: $('[data-testid="vuln-CWEs-table"] tbody a').attr("href") || null,
    CWE_Name: prittyfy($('[data-testid="vuln-CWEs-table"]').text()) || null,
    SOURCE:
      prittyfy($('[data-testid="vuln-CWEs-table"] tbody span span').text()) ||
      null,
  };

  Vulnerability.Matrics = {
    Note: prittyfy($("#cvssEnrichmentNotes").text()) || null,
    cvss4: await getCvss($, "#Vuln4CvssPanel", "cvss4", 4),
    cvss3: await getCvss($, "#Vuln3CvssPanel", "cvss3", 3),
    cvss2: await getCvss($, "#Vuln2CvssPanel", "cvss2", 2),
  };

  if (
    Vulnerability.WeaknessEnumeration.CWE_Name &&
    Vulnerability.WeaknessEnumeration.CWE_ID
  ) {
    Vulnerability.WeaknessEnumeration.CWE_Name =
      Vulnerability.WeaknessEnumeration.CWE_Name.replace(
        Vulnerability.WeaknessEnumeration.CWE_ID,
        ""
      ).trim();
  }
  return Vulnerability;
}
